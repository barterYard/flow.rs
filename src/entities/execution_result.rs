use otopr::*;

#[derive(DecodableMessage, Default)]
pub struct ExecutionResult {
    pub previous_result_id: Vec<u8>,
    pub block_id: Vec<u8>,
    pub chunks: Repeated<Vec<Chunk>>,
    pub service_events: Repeated<Vec<ServiceEvent>>,
}

#[derive(DecodableMessage, Default)]
pub struct Chunk {
    pub start_state: Vec<u8>,        // state when starting executing this chunk
    pub event_collection: Vec<u8>,   // Events generated by executing results
    pub block_id: Vec<u8>,           // Block id of the execution result this chunk belongs to
    pub total_computation_used: u64, // total amount of computation used by running all txs in this chunk
    pub number_of_transactions: u64, // number of transactions inside the collection
    pub index: u64,                  // chunk index inside the ER (starts from zero)
    pub end_state: Vec<u8>,          // EndState inferred from next chunk or from the ER
}

#[derive(DecodableMessage, Default)]
pub struct ServiceEvent {
    pub r#type: String,
    pub payload: Vec<u8>,
}
